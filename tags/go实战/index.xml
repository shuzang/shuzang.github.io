<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Go实战 - 标签 - Shuzang's Blog</title><link>https://shuzang.github.io/tags/go%E5%AE%9E%E6%88%98/</link><description>Go实战 - 标签 - Shuzang's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>liuyang8443@qq.com (Shuzang)</managingEditor><webMaster>liuyang8443@qq.com (Shuzang)</webMaster><lastBuildDate>Thu, 08 Oct 2020 19:35:00 +0800</lastBuildDate><atom:link href="https://shuzang.github.io/tags/go%E5%AE%9E%E6%88%98/" rel="self" type="application/rss+xml"/><item><title>Go实现2048小游戏</title><link>https://shuzang.github.io/2020/a-cli-implement-of-2048-game-using-go/</link><pubDate>Thu, 08 Oct 2020 19:35:00 +0800</pubDate><author>Shuzang</author><guid>https://shuzang.github.io/2020/a-cli-implement-of-2048-game-using-go/</guid><description>&lt;p>Go 实现一个命令行界面的 2048 游戏，仅涉及 Git 和 Go，用来熟悉基本语言特性。原型项目来自 &lt;a href="https://github.com/chhabraamit/2048"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/chhabraamit/2048&lt;/a>&lt;/p></description></item><item><title>基于Go语言开发在线论坛9-部署Go Web应用</title><link>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-9-deploy-go-web-application/</link><pubDate>Sun, 07 Jun 2020 20:50:00 +0800</pubDate><author>Shuzang</author><guid>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-9-deploy-go-web-application/</guid><description>&lt;p>部署 Go 应用相对简单，因为所有应用代码都被打包成一个二进制文件了（视图模板、静态资源和配置文件等非 Go 代码除外），并且不需要依赖其他库，不需要额外的运行时环境（比如 Java 需要再安装 JVM），也不需要部署额外的 HTTP 服务器。&lt;/p></description></item><item><title>基于Go语言开发在线论坛8-消息、视图和日期时间本地化</title><link>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-8-message-view-and-date-time-localizationsingleton-mode/</link><pubDate>Sun, 07 Jun 2020 20:30:00 +0800</pubDate><author>Shuzang</author><guid>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-8-message-view-and-date-time-localizationsingleton-mode/</guid><description>&lt;p>由于之前所有页面和消息文本都是英文的，而我们开发的应用基本都是面向中文用户的，所以需要对项目进行本地化，因此本篇介绍如何在 Go Web 应用中进行国际化和本地化编程，由于项目比较简单，只介绍消息提示、视图模板和日期格式的本地化。&lt;/p></description></item><item><title>基于Go语言开发在线论坛7-通过单例模式获取全局配置</title><link>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-7-get-global-configuration-through-singleton-mode/</link><pubDate>Sun, 07 Jun 2020 16:25:00 +0800</pubDate><author>Shuzang</author><guid>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-7-get-global-configuration-through-singleton-mode/</guid><description>&lt;p>本文介绍如何将敏感信息或可变信息通过配置文件进行配置，然后在应用中读取这些配置文件来获取配置信息。&lt;/p></description></item><item><title>基于Go语言开发在线论坛6-日志与错误处理</title><link>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-6-log-and-error/</link><pubDate>Sun, 07 Jun 2020 11:03:00 +0800</pubDate><author>Shuzang</author><guid>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-6-log-and-error/</guid><description>&lt;p>到现在为止，我们已经完成了在线论坛项目基本功能的开发，对 Go 语言 Web 编程中如何实现 MVC 架构模式以及 CRUD（数据库增删改查）基本操作有了初步的认识。不过现在所有的日志和错误处理都是杂糅在业务代码中，本篇介绍如何对它们统一进行处理，使得业务代码和日志及错误处理逻辑分离。&lt;/p></description></item><item><title>Golang日志系统</title><link>https://shuzang.github.io/2020/golang-log-system/</link><pubDate>Sun, 07 Jun 2020 09:48:00 +0800</pubDate><author>Shuzang</author><guid>https://shuzang.github.io/2020/golang-log-system/</guid><description>&lt;p>日志是一个系统必不可少的部分，本篇介绍Golang中的日志系统。&lt;/p></description></item><item><title>基于Go语言开发在线论坛5-创建群组和主题功能实现</title><link>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-5-create-thread-and-post/</link><pubDate>Fri, 05 Jun 2020 11:41:00 +0800</pubDate><author>Shuzang</author><guid>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-5-create-thread-and-post/</guid><description>&lt;p>上篇文章基于 Cookie + Session 实现了简单的用户认证功能，用户认证之后，就可以创建群组和主题了，本篇介绍如何创建群组和主题，并将其渲染到前端页面。&lt;/p></description></item><item><title>基于Go语言开发在线论坛4-通过Cookie和Session实现用户认证</title><link>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-4-user-authentication/</link><pubDate>Thu, 04 Jun 2020 11:01:00 +0800</pubDate><author>Shuzang</author><guid>https://shuzang.github.io/2020/development-of-online-forum-based-on-golang-4-user-authentication/</guid><description>&lt;p>上篇演示了首页路由、处理器、视图模板的实现，接着就要实现群组、主题的增删查改，不过，需要在认证后才能执行这些操作，所以本篇介绍如何实现用户认证相关功能。&lt;/p></description></item><item><title>Golang设置与使用cookie</title><link>https://shuzang.github.io/2020/golang-set-and-use-cookie/</link><pubDate>Mon, 01 Jun 2020 20:11:00 +0800</pubDate><author>Shuzang</author><guid>https://shuzang.github.io/2020/golang-set-and-use-cookie/</guid><description>&lt;p>关于 Cookie 的使用是 Web 编程中的重要一部分，本篇介绍 Cookie 的基本知识和 Golang 中使用的方法。&lt;/p></description></item><item><title>Golang模板</title><link>https://shuzang.github.io/2020/golang-template/</link><pubDate>Fri, 29 May 2020 17:08:00 +0800</pubDate><author>Shuzang</author><guid>https://shuzang.github.io/2020/golang-template/</guid><description>&lt;p>模板就是在写动态页面时不变的部分，服务端程序渲染可变部分生成动态网页，Go 语言提供了 html/template 包来支持模板渲染。&lt;/p></description></item></channel></rss>